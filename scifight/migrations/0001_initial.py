# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-10-08 17:19
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Fight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('stop_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Not started'), (1, 'In progress'), (2, 'Completed')], default=0)),
            ],
            options={
                'ordering': ['round', 'room'],
            },
        ),
        migrations.CreateModel(
            name='FightStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_num', models.IntegerField()),
                ('fight', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Fight')),
            ],
            options={
                'ordering': ['fight', 'stage_num'],
            },
        ),
        migrations.CreateModel(
            name='Juror',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=140)),
                ('short_name', models.CharField(max_length=140)),
            ],
            options={
                'ordering': ['tournament', 'full_name'],
            },
        ),
        migrations.CreateModel(
            name='JurorPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporter_mark', models.IntegerField(blank=True, null=True)),
                ('opponent_mark', models.IntegerField(blank=True, null=True)),
                ('reviewer_mark', models.IntegerField(blank=True, null=True)),
                ('fight_stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.FightStage')),
                ('juror', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Juror')),
            ],
            options={
                'ordering': ['fight_stage', 'juror'],
            },
        ),
        migrations.CreateModel(
            name='Leader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=140)),
                ('short_name', models.CharField(max_length=140)),
            ],
            options={
                'ordering': ['tournament', 'full_name'],
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=140)),
                ('short_name', models.CharField(max_length=140)),
                ('grade', models.CharField(blank=True, max_length=20)),
                ('is_captain', models.BooleanField()),
            ],
            options={
                'ordering': ['tournament', 'full_name'],
            },
        ),
        migrations.CreateModel(
            name='PersonIdentity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PersonOrigin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_name', models.CharField(max_length=140)),
            ],
            options={
                'ordering': ['place_name'],
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_num', models.IntegerField(db_index=True)),
                ('title', models.CharField(max_length=140)),
                ('description', models.TextField(blank=True, max_length=1024)),
            ],
            options={
                'ordering': ['tournament', 'problem_num'],
            },
        ),
        migrations.CreateModel(
            name='Refusal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fight_stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.FightStage')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Problem')),
            ],
            options={
                'ordering': ['fight_stage', 'problem'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=140)),
                ('sorting_key', models.FloatField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=20)),
            ],
            options={
                'ordering': ['sorting_key'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
                ('slug', models.SlugField(blank=True, max_length=20, null=True)),
                ('description', models.TextField(blank=True, max_length=1024)),
            ],
            options={
                'ordering': ['tournament', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TeamIdentity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TeamOrigin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_name', models.CharField(max_length=140)),
            ],
            options={
                'ordering': ['place_name'],
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=140, unique=True)),
                ('short_name', models.CharField(max_length=140, unique=True)),
                ('slug', models.SlugField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('opening_date', models.DateField()),
                ('closing_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['opening_date'],
            },
        ),
        migrations.CreateModel(
            name='TournamentRound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_num', models.SmallIntegerField()),
                ('opening_time', models.DateTimeField()),
                ('closing_time', models.DateTimeField()),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament')),
            ],
            options={
                'ordering': ['round_num'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='scifight_extra', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='identity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='scifight.TeamIdentity'),
        ),
        migrations.AddField(
            model_name='team',
            name='origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scifight.TeamOrigin'),
        ),
        migrations.AddField(
            model_name='team',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament'),
        ),
        migrations.AddField(
            model_name='room',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament'),
        ),
        migrations.AddField(
            model_name='refusal',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament'),
        ),
        migrations.AddField(
            model_name='problem',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament'),
        ),
        migrations.AddField(
            model_name='participant',
            name='identity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='scifight.PersonIdentity'),
        ),
        migrations.AddField(
            model_name='participant',
            name='origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scifight.PersonOrigin'),
        ),
        migrations.AddField(
            model_name='participant',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Team'),
        ),
        migrations.AddField(
            model_name='participant',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament'),
        ),
        migrations.AddField(
            model_name='leader',
            name='identity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaders', to='scifight.PersonIdentity'),
        ),
        migrations.AddField(
            model_name='leader',
            name='origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scifight.PersonOrigin'),
        ),
        migrations.AddField(
            model_name='leader',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Team'),
        ),
        migrations.AddField(
            model_name='leader',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament'),
        ),
        migrations.AddField(
            model_name='jurorpoints',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament'),
        ),
        migrations.AddField(
            model_name='juror',
            name='identity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jury', to='scifight.PersonIdentity'),
        ),
        migrations.AddField(
            model_name='juror',
            name='origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scifight.PersonOrigin'),
        ),
        migrations.AddField(
            model_name='juror',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament'),
        ),
        migrations.AddField(
            model_name='fightstage',
            name='opponent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='scifight.Participant'),
        ),
        migrations.AddField(
            model_name='fightstage',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Problem'),
        ),
        migrations.AddField(
            model_name='fightstage',
            name='reporter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='scifight.Participant'),
        ),
        migrations.AddField(
            model_name='fightstage',
            name='reviewer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='scifight.Participant'),
        ),
        migrations.AddField(
            model_name='fight',
            name='jury',
            field=models.ManyToManyField(blank=True, to='scifight.Juror'),
        ),
        migrations.AddField(
            model_name='fight',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Room'),
        ),
        migrations.AddField(
            model_name='fight',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.TournamentRound'),
        ),
        migrations.AddField(
            model_name='fight',
            name='team1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='scifight.Team'),
        ),
        migrations.AddField(
            model_name='fight',
            name='team2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='scifight.Team'),
        ),
        migrations.AddField(
            model_name='fight',
            name='team3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='scifight.Team'),
        ),
        migrations.AddField(
            model_name='fight',
            name='team4',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='scifight.Team'),
        ),
        migrations.AddField(
            model_name='fight',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scifight.Tournament'),
        ),
        migrations.AlterUniqueTogether(
            name='tournamentround',
            unique_together=set([('tournament', 'round_num')]),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together=set([('tournament', 'slug')]),
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together=set([('tournament', 'slug')]),
        ),
        migrations.AlterUniqueTogether(
            name='refusal',
            unique_together=set([('fight_stage', 'problem')]),
        ),
        migrations.AlterUniqueTogether(
            name='problem',
            unique_together=set([('tournament', 'problem_num')]),
        ),
        migrations.AlterUniqueTogether(
            name='participant',
            unique_together=set([('tournament', 'identity')]),
        ),
        migrations.AlterUniqueTogether(
            name='leader',
            unique_together=set([('tournament', 'identity')]),
        ),
        migrations.AlterUniqueTogether(
            name='jurorpoints',
            unique_together=set([('fight_stage', 'juror')]),
        ),
        migrations.AlterUniqueTogether(
            name='juror',
            unique_together=set([('tournament', 'identity')]),
        ),
        migrations.AlterUniqueTogether(
            name='fightstage',
            unique_together=set([('fight', 'stage_num')]),
        ),
        migrations.AlterUniqueTogether(
            name='fight',
            unique_together=set([('room', 'round')]),
        ),
    ]
